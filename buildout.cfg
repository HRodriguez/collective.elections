[buildout]
extends =
    http://svn.plone.org/svn/collective/buildout/plonetest/test-4.x.cfg
    http://good-py.appspot.com/release/dexterity/1.2.1

package-name = collective.elections
package-extras = [test]
test-eggs = Pillow

parts +=
    i18ndude
    omelette
    pylint
    pyflakes
    pep8
    static_check

[instance]
eggs +=
    Pillow
    iw.debug
    sauna.reload
zope-conf-additional = %import sauna.reload

zcml +=
    iw.debug

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[test]
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']

# Here are some more coding tools. pylint analyzes Python source code
# looking for bugs and signs of poor quality. pyflakes is focused on
# identifying common errors quickly without executing Python code.
# pep8 is a tool to check your Python code against some of the style
# conventions in PEP 8.
[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    ${instance:eggs}
entry-points = pylint=pylint.lint:Run
scripts = pylint
arguments = [
    '--output-format=colorized',
    '--zope=y',
    '--reports=no',
#Suppress certain errors (interfaces missing __init__, invalid imports etc)
    '--disable=E0611,F0401,W0232',
    ] + sys.argv[1:]

[pyflakes]
recipe = zc.recipe.egg
scripts = pyflakes
eggs = pyflakes
#pyflakes reads sys.argv directly
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pep8]
recipe = zc.recipe.egg
eggs = pep8

[static_check]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/static_check.sh.in
output = ${buildout:bin-directory}/static_check.sh
mode = 750